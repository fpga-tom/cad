classdef QPSKTx < matlab.System
    % QPSKTx Add summary here
    
    properties (Nontunable)
        
    end
    
    properties (DiscreteState)
    end
    
    properties (Access = private, Constant)
        rp=[1750,1096,1636,1025,293,207,962,1181,1335,1452,411,503,491,1135,1460,245,1936,191,1296,1385,1978,1403,1679,845,1624,1495,1146,1752,972,2008,502,534,1990,421,658,1108,254,742,425,1008,1609,314,2037,1805,923,465,58,1542,1700,1706,1343,1203,1999,1666,236,1922,2039,66,736,27,453,1431,485,1524,1737,1950,186,1992,1826,612,906,634,687,1112,115,1682,469,2011,1788,1047,925,1016,42,219,397,2023,1473,175,1844,48,255,952,1326,1229,1157,1759,731,1514,589,679,1305,813,636,1897,138,708,1125,1177,1994,1105,21,1816,1285,818,1586,954,527,1862,1622,264,324,168,714,1104,1850,1132,793,1106,265,1882,1708,75,137,61,1896,1068,1,487,712,824,231,110,52,1213,859,43,319,362,1311,1350,28,1641,1300,805,1080,525,1107,1028,495,74,182,1775,333,1159,1711,2013,466,1478,933,1539,1825,363,939,1089,1448,308,1716,1167,1691,1259,1226,1955,1321,1264,1377,649,482,629,30,546,936,1330,121,1384,1354,826,1758,1261,422,1249,1959,659,146,1002,1522,1066,1559,677,224,45,113,69,1389,343,1903,448,790,1606,1941,767,288,345,878,917,1503,2005,1134,62,1250,757,808,522,394,1014,1526,360,118,1807,2012,1487,1930,1612,217,558,1113,1468,112,1304,457,981,1279,1069,839,1832,1969,1056,583,563,1880,1437,248,846,1701,867,1574,389,1577,973,361,804,1513,1878,1931,1423,401,1787,1310,1607,1153,237,1374,1288,1648,1812,1147,2016,1991,1748,90,1301,987,1792,540,148,810,346,494,38,1098,1379,468,1987,700,553,754,195,1191,1842,1683,1985,1038,1497,512,1734,840,1274,961,526,1239,507,557,1380,1238,206,758,426,729,350,396,1327,1306,504,1375,344,488,1420,242,46,1667,1688,1899,1745,1082,1100,1461,383,1200,934,1451,1618,1163,473,51,1169,1594,1036,232,1543,721,1643,252,1974,726,1579,222,1021,1947,1889,628,580,2038,1418,561,1320,1190,1568,1894,1983,1120,651,1960,447,1048,1123,1599,927,262,250,1621,1912,1397,780,1360,704,336,1474,1399,581,782,1270,1976,1527,395,1046,1224,1084,315,55,310,1212,610,885,1480,23,2022,1958,521,775,1322,1172,1665,155,1549,623,1741,358,668,976,1015,868,152,1173,1357,1477,1977,161,1303,1715,2000,1489,950,578,1722,986,1649,337,309,1822,852,819,1929,732,967,292,994,683,796,1578,99,889,1353,1552,477,861,399,1768,1584,631,1791,111,180,1171,1178,9,965,2015,85,2021,1753,1401,1723,1186,918,1647,619,1201,1879,871,795,1355,622,79,899,1628,130,149,1003,1644,277,1690,33,2030,1290,1483,963,1536,405,88,877,1280,1637,518,822,1721,1054,373,1601,280,1774,641,1818,969,1486,1592,1430,1114,1501,126,872,614,926,1785,531,1756,1560,1338,291,1081,697,1236,480,1365,1240,1204,999,151,1547,1402,624,1415,398,1345,305,101,765,594,524,1980,1444,1373,1136,762,1681,290,888,508,1898,1596,1841,171,40,900,833,1686,1416,441,420,1616,178,386,1055,449,1247,510,1019,1888,696,492,1646,1831,17,1895,1836,932,1119,1077,869,1150,1575,1518,1165,355,771,1662,19,1661,1216,759,1254,1268,1059,1458,107,1541,1979,76,1185,1074,1540,1668,225,588,1462,545,424,1370,1372,325,1919,630,1492,1855,445,1496,1935,914,1490,1206,164,1315,418,136,1160,1965,1928,1030,931,1659,1099,297,1218,1337,378,1801,1072,1829,996,666,511,1277,67,2,44,1316,1781,1761,1329,1581,71,922,1757,1018,913,165,471,1521,740,423,128,1230,1866,1094,693,836,1475,626,446,275,744,1409,31,172,551,1859,554,609,748,827,303,266,4,147,745,911,1445,1857,1408,1733,481,862,1809,647,957,1642,543,318,218,1920,1538,535,686,735,817,672,204,970,964,1118,942,769,1614,25,1131,1103,801,284,1902,1509,1794,1252,450,462,797,1938,1998,1383,400,478,1155,1554,1256,249,1589,479,1820,1657,406,1051,1220,1925,671,505,699,289,173,646,591,1454,1071,497,47,349,665,1386,787,1824,1530,979,650,1455,98,493,467,946,328,1651,317,904,150,831,1175,185,794,141,105,1139,1447,437,600,1349,1921,1834,513,1707,404,974,351,567,552,1194,1703,774,1984,1534,898,516,1704,773,947,1558,1294,1953,1210,1982,1152,1297,559,1427,407,883,1332,353,108,1510,1515,1863,321,200,144,1712,1846,53,783,1494,193,1400,365,140,865,791,1551,1865,1286,841,750,233,39,1735,1915,1673,1908,1926,1275,1849,949,100,760,1158,1366,238,637,223,1654,170,1505,730,948,1235,785,1810,938,1713,1639,1782,1638,16,1130,916,1124,1771,1202,1450,816,1061,585,1954,1677,1188,1328,1751,1151,1371,1143,1729,459,1456,1428,1523,392,880,427,1017,82,102,1873,1039,538,1388,1361,968,928,870,1246,1499,1318,72,87,483,1392,60,1293,295,1789,1945,484,1996,802,1273,431,1180,501,1339,496,1744,124,1032,435,1041,1076,1927,388,54,68,1406,1438,1182,1717,1260,1964,1905,1883,316,95,577,1369,908,738,991,1780,1237,1765,1411,722,1698,1576,620,1034,1459,1358,1684,1005,359,1675,1313,1148,1097,2010,607,2026,1436,1298,1613,985,568,119,1085,1933,167,860,1664,706,1376,611,1875,1314,409,1887,1020,951,724,1740,1604,711,571,562,1233,1555,799,1770,896,263,829,190,1798,1189,2025,117,866,1853,690,853,379,1795,132,1307,278,1913,743,91,887,403,1833,779,660,713,1457,1569,109,1484,260,909,274,1265,1405,1710,547,638,77,1944,1762,36,855,304,142,1407,240,1911,32,1394,1507,415,761,1057,572,1528,2017,830,1393,536,1779,1881,104,1696,451,1164,158,227,499,1040,282,220,1870,8,1821,34,599,1227,1519,1500,1583,879,209,1623,657,2002,390,1488,556,1062,210,323,863,1035,1266,555,1736,490,1773,857,1590,1323,1948,678,1635,1083,439,1840,1342,78,208,1967,335,330,644,1730,1790,1426,566,709,133,953,160,1924,202,523,258,1334,884,1854,1563,924,1079,70,1838,1217,1207,1535,940,1587,381,1245,751,695,1049,96,73,84,296,574,983,895,1012,1149,1253,1464,820,1956,342,1943,203,261,874,2033,340,1981,1804,1033,1037,287,412,1778,1942,789,1776,1629,707,945,393,1024,993,1837,1101,635,676,1363,716,1797,602,1516,1276,339,13,1565,1511,57,41,1225,120,682,1572,821,1705,1269,443,579,781,438,627,188,1348,215,145,1472,1655,1632,1531,1092,24,1075,2014,533,1142,1813,1242,410,184,1482,1208,586,1719,94,65,1937,766,753,1839,544,2019,1443,856,329,1362,876,1299,244,648,5,984,181,20,1214,1340,719,311,520,640,812,912,1013,1949,1827,364,1529,387,103,537,930,1050,1395,1852,1070,267,1963,463,18,1289,749,905,1222,1910,710,1923,153,988,1176,1867,1815,1052,486,2036,366,229,348,356,1570,50,1966,1951,1476,509,584,915,1396,718,7,93,1939,834,1766,618,702,828,1336,809,1453,123,1302,823,14,1282,1333,1126,1545,444,598,1271,179,893,414,1469,1102,843,1714,1909,921,1391,681,273,1803,1352,1728,592,576,1324,442,2024,1968,1658,1652,1767,1364,733,1995,301,1961,1764,770,990,1413,768,1893,347,1580,1312,243,1671,1440,269,1970,1777,1138,322,654,1141,1382,1525,517,474,2031,1793,1900,615,2009,1988,844,1971,772,528,429,617,1885,1027,1907,1199,995,489,1267,1800,270,1010,1917,1693,1585,842,1906,1215,1347,891,1709,1064,2020,1819,717,741,881,727,673,1211,375,811,1755,211,1796,271,1001,788,1817,1272,1221,920,1743,1465,1429,201,1533,1471,1725,902,1674,205,1627,338,806,691,1754,892,944,1772,49,1231,454,2001,1727,1485,1255,684,251,430,674,1417,1381,26,1122,506,306,1257,374,1170,935,1742,1422,653,685,776,1262,312,1287,302,756,176,1537,1645,1610,1718,1086,858,1689,194,1962,1843,1110,1251,221,1916,587,2007,2004,372,1872,234,10,246,279,1702,1871,1439,1121,864,1463,1830,157,1045,1412,849,1856,377,1556,1934,1914,1319,997,1989,747,385,1111,1248,1283,1470,259,241,354,966,1891,1241,199,476,680,1442,1760,2032,882,2029,982,320,1567,1088,725,368,847,549,239,1783,1309,910,565,428,643,929,832,228,689,1009,135,380,376,1244,1615,575,625,1799,413,198,307,169,1602,894,1007,3,1434,943,226,35,1127,370,603,1520,529,470,667,1670,1687,1129,1851,1168,838,1060,854,605,1869,1387,1582,692,597,1561,1786,1633,764,1904,1344,1811,616,1746,174,1414,1073,1860,419,1877,814,1367,154,272,352,675,1845,1398,1341,989,1997,800,256,1466,1861,1769,1390,1598,530,1993,1031,1219,1724,1331,652,86,1603,1284,539,139,837,196,1611,472,500,1650,1553,777,1133,1676,1058,656,601,2034,1145,1346,1504,127,1183,1617,498,548,81,416,1195,613,763,1625,705,1973,1847,331,1278,560,1187,941,1557,1802,1986,1078,1593,1419,542,1042,596,313,590,1446,1634,1292,1806,1156,1952,755,116,1291,166,639,1808,975,1672,1198,848,723,662,688,715,281,440,1940,1228,1532,189,1597,1874,1467,1692,606,903,784,1424,1162,1546,367,1140,187,162,1868,1608,257,12,1678,956,1232,1544,2027,582,163,1128,1619,125,464,564,461,1449,456,64,1738,1308,1011,1571,56,2003,1508,1886,734,1957,1184,955,177,106,608,1441,1179,1640,475,460,1726,897,1595,1006,1502,1858,357,1660,569,515,334,1747,1685,11,1699,698,114,1053,873,268,143,235,294,230,1115,1197,1739,1631,593,514,532,1548,156,645,1067,59,1720,1095,1209,1901,1356,1166,971,1026,214,642,901,436,570,455,737,1823,1697,1192,1663,384,1626,1317,632,1359,197,573,283,739,97,1512,1263,80,694,655,728,15,1605,937,192,432,1517,851,907,1506,835,798,792,786,1620,216,408,778,2035,1378,29,1591,212,286,1404,1972,670,2018,1814,327,1425,807,1000,37,1368,434,1022,276,1004,2040,663,977,285,371,1653,621,1562,633,1828,1281,1564,1090,875,1630,1325,1749,1023,825,129,1137,886,213,992,850,1161,1493,701,1932,550,1432,1876,1975,519,1892,803,1763,661,1154,890,1421,746,382,720,1196,959,1087,458,89,1918,131,1732,1093,332,1694,669,752,1890,1144,1669,1295,417,1550,300,1223,1864,326,2028,1946,183,1243,341,391,1656,978,159,1065,1848,2006,919,92,1116,1044,1491,664,1109,958,1091,541,369,1174,122,1600,1835,1205,1479,83,703,1884,1481,299,980,1695,1063,815,253,604,1566,1410,960,433,1435,1731,452,247,1193,6,134,1588,298,1117,1498,22,1234,1258,1680,1433,1043,1029,1784,595,998,63,1351,402,1573];
        Rsym = 1250;         % Symbol rate (symbols/second)
        nSamps = 8;         % Number of samples per symbol
        decim=2;
        
        Nc = 8 % frame's codeword count
        
        % BCH encoder
        N = 255; % codeword length
        K = 47; % message length
        % S = 63; % short message length
        
        % Calculate sampling frequency in Hz
        Fs = QPSKTx.Rsym * QPSKTx.nSamps;
        ScramblerBase = 2;
        ScramblerPolynomial = [1 1 1 0 1];
        ScramblerInitialConditions = [0 0 0 0];
        bbc = [+1 +1 +1 +1 +1 -1 -1 +1 +1 -1 +1 -1 +1]; % Bipolar Barker Code
        ubc = ((QPSKTx.bbc + 1) / 2)'; % Unipolar Barker Code
        temp = (repmat(QPSKTx.ubc,1,2))';
        pHeader = QPSKTx.temp(:);
        
    end
    
    properties (Access = private)
        % Pre-computed constants.
        pScrambler
        pBch
        pInlv
        hMod
        rrc
        lastIdx
        
    end
    
    methods (Access = protected)
        function setupImpl(obj,u)
%             gp = bchgenpoly(obj.N,obj.K, [], 'double');
            obj.pScrambler = comm.Scrambler(obj.ScramblerBase, obj.ScramblerPolynomial, obj.ScramblerInitialConditions, 'ResetInputPort', true);
            obj.pBch = comm.BCHEncoder(obj.N, obj.K); % BCH code in AMR standard
            
            obj.pInlv = comm.BlockInterleaver(obj.rp');
            obj.hMod=comm.QPSKModulator('BitInput', true);
            obj.rrc=comm.RaisedCosineTransmitFilter('OutputSamplesPerSymbol', obj.nSamps);
            obj.lastIdx=0;
        end
        
        function y = stepImpl(obj,u)
            txdata=de2bi(u, 8, 'left-msb');
            txdata=txdata';
            txdata=txdata(:);
            scrData=step(obj.pScrambler, txdata, 1);
            mdata=reshape(scrData, obj.K, obj.Nc);
            encData=zeros(obj.N,obj.Nc);
            for i=1:obj.Nc
                encData(:,i)=step(obj.pBch, mdata(:,i));
            end
            inlvData=step(obj.pInlv, encData(:));
            data=step(obj.hMod, [obj.pHeader; inlvData]);
            sig=step(obj.rrc, data);
            qad=real(sig).*cos([obj.lastIdx:obj.lastIdx+length(sig)-1]'.*pi/2) + imag(sig).*sin([obj.lastIdx:obj.lastIdx+length(sig)-1]'.*pi/2);
            y=int8(round(qad.*2^7));
            obj.lastIdx=obj.lastIdx+length(sig);
        end
        
        function resetImpl(obj)
            reset(obj.pScrambler);
            reset(obj.hMod);
            reset(obj.rrc);
        end
    end
end
