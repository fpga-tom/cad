--lpm_add_sub CARRY_CHAIN="MANUAL" CARRY_CHAIN_LENGTH=48 DEVICE_FAMILY="Cyclone V" LPM_PIPELINE=1 LPM_REPRESENTATION="SIGNED" LPM_WIDTH=20 aclr add_sub(vcc) clken clock dataa datab result
--VERSION_BEGIN 15.1 cbx_cycloneii 2015:10:14:18:59:15:SJ cbx_lpm_add_sub 2015:10:14:18:59:15:SJ cbx_mgl 2015:10:21:19:02:34:SJ cbx_nadder 2015:10:14:18:59:15:SJ cbx_stratix 2015:10:14:18:59:15:SJ cbx_stratixii 2015:10:14:18:59:15:SJ  VERSION_END


-- Copyright (C) 1991-2015 Altera Corporation. All rights reserved.
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, the Altera Quartus Prime License Agreement,
--  the Altera MegaCore Function License Agreement, or other 
--  applicable license agreement, including, without limitation, 
--  that your use is for the sole purpose of programming logic 
--  devices manufactured by Altera and sold by Altera or its 
--  authorized distributors.  Please refer to the applicable 
--  agreement for further details.



--synthesis_resources = lut 20 
SUBDESIGN add_sub_n0h
( 
	aclr	:	input;
	add_sub	:	input;
	clken	:	input;
	clock	:	input;
	dataa[19..0]	:	input;
	datab[19..0]	:	input;
	result[19..0]	:	output;
) 
VARIABLE
	pipeline_dffe[19..0]	:	DFFE
		WITH (
			power_up ="low"
		);
	result_int[19..0]	:	WIRE;
	const_used_add_sub	:	WIRE;
BEGIN 
	result_int[] = dataa[] + datab[];
	pipeline_dffe[].clk = clock;
	pipeline_dffe[].clrn = !aclr;
	pipeline_dffe[].ena = clken;
	result[] = pipeline_dffe[19..0].q;
	pipeline_dffe[19..0].d = result_int[];
	const_used_add_sub = add_sub;
END;
--VALID FILE
